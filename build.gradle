apply plugin: 'java'
//apply plugin: 'antlr'
apply plugin: 'me.champeau.gradle.antlr4'

buildscript {
    repositories {
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }

    dependencies {
        classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1'
    }
}

repositories {
    jcenter()
    //mavenCentral()
}

antlr4{
	source=file("src/main/antlr")
	output=file("src/main/java/hivesql/analysis/parse")
	extraArgs=['-Werror']
}

dependencies {
	compile "org.antlr:antlr4:4.5.3"
    compile 'org.slf4j:slf4j-api:1.7.13'

    testCompile group: 'org.testng', name: 'testng', version: '6.9.10'

}

compileJava.dependsOn antlr4


/**
How to run:
	gradle grun -PsqlFileName=b_test.sql
*/
if(project.properties.containsKey('sqlFileName')){
	task grunGui(dependsOn:compileJava, type: JavaExec) {
		classpath = sourceSets.main.runtimeClasspath
		main='org.antlr.v4.gui.TestRig'
		args 'hivesql.analysis.parse.HiveSQL', 'stat', '-gui', "${project.projectDir}/src/test/resources/${sqlFileName}"
	}
}

task grunAllTestSqls(){}

file("${project.projectDir}/src/test/resources/").eachFileMatch{
		fileName-> fileName.endsWith(".sql")
	} {
		File file->
			def taskName="task_test_${file.name}"
			task (taskName, dependsOn:compileJava, type: JavaExec) {
				classpath = sourceSets.main.runtimeClasspath
				main='org.antlr.v4.gui.TestRig'
				args 'hivesql.analysis.parse.HiveSQL', 'stat', '-diagnostics', "${file.absolutePath}"
			}
			grunAllTestSqls.dependsOn taskName
	}




